/*
 * generated by Xtext 2.21.0
 */
package org.ros.urdf.scoping;

import java.util.List;

import javax.naming.LinkRef;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.IScopeProvider;
import org.eclipse.xtext.scoping.Scopes;
import org.ros.model.urdf.Child;
import org.ros.model.urdf.Link;
import org.ros.model.urdf.Material;
import org.ros.model.urdf.MaterialGlobal;
import org.ros.model.urdf.Parent;
import org.ros.model.urdf.UrdfPackage;

/**
 * {@link IScopeProvider} implementation for custom model scopes
 */
public class DslScopeProvider extends AbstractDslScopeProvider {
	
	@Override
	public IScope getScope(EObject context, EReference reference) {
	
		if(context instanceof Material && reference==UrdfPackage.Literals.MATERIAL__MATERIAL_REF) {			
			return resolveGlobalMaterials(context);			
		}
		
		if(context instanceof Parent && reference==UrdfPackage.Literals.LINK_REF__LINK_REF) {		
			return resolveLinks(context);			
		}
		
		if(context instanceof Child && reference==UrdfPackage.Literals.LINK_REF__LINK_REF) {		
			return resolveLinks(context);			
		}
				
		return super.getScope(context, reference);
	}

	private IScope resolveLinks(EObject context) {
		EObject rootElement = EcoreUtil2.getRootContainer(context);
		List<Link> allLinks = EcoreUtil2.getAllContentsOfType(rootElement, Link.class);			
		return Scopes.scopeFor(allLinks);
	}

	private IScope resolveGlobalMaterials(EObject context) {
		EObject rootElement = EcoreUtil2.getRootContainer(context);
		List<MaterialGlobal> globalMaterials = EcoreUtil2.getAllContentsOfType(rootElement, MaterialGlobal.class);			
		return Scopes.scopeFor(globalMaterials);
	}
		
}
