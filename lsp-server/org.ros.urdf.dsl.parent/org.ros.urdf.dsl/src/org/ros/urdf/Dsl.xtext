grammar org.ros.urdf.Dsl with org.eclipse.xtext.common.Terminals

import "http://www.ros.org/model/urdf"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

RobotType returns RobotType:
	'robot' name=STRING ('version' '=' version=STRING)? '{'
	('materials' '{' material+=(TextureGlobal | ColorGlobal)* '}')?
	('links' '{' link+=(Link)* '}')?
	('joints' '{' joint+=(FixedJoint | RevoluteJoint|PrismaticJoint)* '}')?
	'}';

Link returns Link:
	'link'  name=STRING visual+=Visual;

FixedJoint returns Joint:
	{Joint} type="fixed" name=STRING parent=Parent child=Child ('{'
		origin=Origin?			
	'}')?;

RevoluteJoint returns Joint:
	{Joint} type="revolute" name=STRING parent=Parent child=Child ('{'
		origin=Origin?
		axis= Axis ?
		limit=Limit?
	'}')?;

PrismaticJoint returns Joint:
	{Joint} type="prismatic" name=STRING parent=Parent child=Child ('{'
		origin=Origin?
		axis= Axis ?
		limit=Limit?
	'}');	

Visual:			 
	geometry=(BoxGeometry | CylinderGeometry | SphereGeometry | MeshGeometry)		
	material=InlineMaterial? 
	('{' origin=Origin  '}')?
;
	
Origin returns Pose:	
	'xyz' '=' xyzVector=Vector3 ('rpy' '=' rpyVector=Vector3)?;
	
	
Axis returns Axis:
	'axis-xyz' '=' xyzVector=Vector3  
;	

Limit returns Limit:	
	'lower-limit' '=' lower=DOUBLE 	
	'upper-limit' '=' upper=DOUBLE
;

InlineMaterial returns Material:
	'material' '=' name=STRING;

BoxGeometry returns Geometry:
	box=Box;

CylinderGeometry returns Geometry:
	cylinder=Cylinder;

SphereGeometry returns Geometry:
	sphere=Sphere;
MeshGeometry returns Geometry:
	mesh=Mesh;	

Box returns Box:
	'box'  dimension=BoxDimension;

BoxDimension returns Vector3:
	'length' '=' a=DOUBLE 'width' '=' b=DOUBLE 'height' '=' c=DOUBLE;

Cylinder returns Cylinder:
	'cylinder' 'length' '=' length=DOUBLE 'radius' '=' radius=DOUBLE;

Sphere returns Sphere:
	'sphere' 'radius' '=' radius=DOUBLE;

Mesh returns Mesh:
	'mesh'  'file-name' '=' filename=STRING ('scale-xyz' '=' scaleVector=Vector3)? 
;

TextureGlobal returns MaterialGlobal:
	'texture' name=STRING texture=Texture;

Texture returns Texture:
	'file-name' '=' filename=STRING;

ColorGlobal returns MaterialGlobal:
	'color' name=STRING color=Color;

Color returns Color:
	'rgba' '=' color=Vector4;

Parent:
	'parent-name' '=' link=STRING;

Child:
	'child-name' '=' link=STRING;

Vector3:
	'(' a=DOUBLE ',' b=DOUBLE ',' c=DOUBLE ')';

Vector4:
	'(' a=DOUBLE ',' b=DOUBLE ',' c=DOUBLE ',' d=DOUBLE ')';

DOUBLE returns ecore::EDouble:
	'-'? INT ('.' INT)?;


